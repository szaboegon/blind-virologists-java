package koporscho;
import proto.Prototype;


//
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : Koporscho csapat Projlab 
//  @ File Name : Lab.java
//  @ Date : 2022. 03. 25.
//  @ Authors : Szab� Egon, Bir� Ferenc, T�th B�lint, Ferge M�t�, Rahmi D�niel
//
//




/** A Field osztály leszármazottja, a labor mezőt reprezentálja.*/
public class Lab extends Field {

	/** A laborban elhelyezett ágens genetikus kódja.*/
	private Agent geneticCode;

	/** Változó, mely eltárolja, hogy az adott labor medvevírussal fertőz-e*/
	 private boolean infected;

	 /** A medvevírus ágensét tárolja*/
	 private Agent bearAgent;

	/**
	 * Labor mező konstruktora, amely a paraméterként kapott elhelyezi a mezőn.
	 * @param gC Ágens a laborban
	 */
	public Lab(Agent gC) {
		geneticCode = gC;

		//Creating the bear virus
		StatusEffect bear = new StatusEffect();
		bear.SetBear(true);
		bear.SetDuration(-1);

		bearAgent = new Agent(bear,null,"Bear Virus");
		infected = false;
	}

	/**
	 * A Lab osztáy paraméter nélküli konstruktora.
	 */
	public Lab() {
		geneticCode = null;
		//Creating the bear virus
		StatusEffect bear = new StatusEffect();
		bear.SetBear(true);
		bear.SetDuration(-1);

		bearAgent = new Agent(bear,null,"Bear Virus");
		infected = false;
	}
	/** Meghívja a paraméterként kapott visitornak megfelelő függvényét.*/
	public void React(IVis vis) {
		vis.InteractLab();
	}
	
	/** Visszaadja a laborban található ágenst */
	public Agent GetRecipe() {
		return geneticCode;
	}

	/**
	 * Hozzáadja a paraméterként kapott ágenst a mezőhöz.
 	 * @param a Új ágens, amit elhelyezünk a mezőn
	 */
	public void AddGeneticCode(Agent a) {
		geneticCode = a;
	}

	/**
	 * Elhelyezi a paraméterként kapott karaktert a mezőn, ha bear vírus van rajta, azzal megfertőzi a karaktert is.
	 * @param target A mezőre lépő karakter
	 */
	@Override
	public void Accept(Character target) {
		super.Accept(target);
		// Trying to apply bear agent
		if(infected) target.HandleAgent(null, bearAgent,false);
	}

	/**
	 * Fertőzött mezővé állítja az adott labort a paraméterként kapott medvevírus beállításával
	 * @param bearAgent Medvevírus
	 * @param infected Medvevírus flag
	 */
	public void setInfected(Agent bearAgent, boolean infected) {
		if (infected) {
			this.infected = true;
			this.bearAgent = bearAgent;
		}
		else {
			this.infected = false;
			this.bearAgent = null;
		}
	}

	/**
	 * Implicit getter a mező fertőzöttségének lekérdezésére.
	 * @return
	 */
	public boolean getInfected(){
		return infected;
	}

	/**
	 * A Lab osztály logger fügvénye, mely az adott labor tulajdonságait írja ki a standard kimentre és fájlba.
	 * @throws java.io.IOException
	 */
	public void log() throws java.io.IOException{
		super.log();

		System.out.println("\tinfected: "+infected);
		System.out.println("\tgeneticCode: " + (geneticCode==null?"-":Prototype.objectIDs.get(geneticCode)));
		System.out.println("\tbearAgent: " + (bearAgent==null ||Prototype.objectIDs.get(bearAgent) == null?"-":Prototype.objectIDs.get(bearAgent)));

		Prototype.writer.write("\tinfected: "+infected+"\n");
		Prototype.writer.write("\tgeneticCode: "+(geneticCode==null?"-":Prototype.objectIDs.get(geneticCode))+"\n");
		Prototype.writer.write("\tbearAgent: "+((bearAgent==null || Prototype.objectIDs.get(bearAgent) == null)?"-":Prototype.objectIDs.get(bearAgent))+"\n");
	}
}
